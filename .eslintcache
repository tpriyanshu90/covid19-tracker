[{"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/index.js":"1","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/App.js":"2","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/Cards/Cards.js":"3","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/Chart/Chart.js":"4","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/index.js":"5","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/api/index.js":"6","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/CountryLists/CountryLists.js":"7","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/About/About.js":"8","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/Error/Error.js":"9","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/Home/Home.js":"10","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/PaginatedTable/PaginatedTable.js":"11"},{"size":356,"mtime":1606844901675,"results":"12","hashOfConfig":"13"},{"size":1368,"mtime":1606851640512,"results":"14","hashOfConfig":"13"},{"size":2598,"mtime":1606841650623,"results":"15","hashOfConfig":"13"},{"size":1747,"mtime":1606841619782,"results":"16","hashOfConfig":"13"},{"size":395,"mtime":1606845096482,"results":"17","hashOfConfig":"13"},{"size":662,"mtime":1606841660476,"results":"18","hashOfConfig":"13"},{"size":6582,"mtime":1606851170324,"results":"19","hashOfConfig":"13"},{"size":693,"mtime":1606846990393,"results":"20","hashOfConfig":"13"},{"size":156,"mtime":1606842044832,"results":"21","hashOfConfig":"13"},{"size":660,"mtime":1606844597824,"results":"22","hashOfConfig":"13"},{"size":5756,"mtime":1606849335739,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"kvtz6i",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/index.js",["49","50","51","52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport About from './components/About/About';\nimport { Route, Link, BrowserRouter, Switch } from 'react-router-dom';\n\n//<React.StrictMode>\n\nReactDOM.render(\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>,\n  document.getElementById('root')\n);",["53","54"],"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/App.js",[],"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/Cards/Cards.js",[],"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/Chart/Chart.js",[],"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/index.js",[],"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/api/index.js",[],"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/CountryLists/CountryLists.js",["55","56","57","58","59","60","61","62","63","64","65","66"],"import React from 'react';\n\nimport { fetchCountryData } from '../../api';\nimport styles from './CountryLists.module.css';\n\nclass CountryLists extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            countryName: \"\",\n            filteredList: [],\n            countriesList: []\n        }\n    }\n    async componentDidMount(){\n        const countriesList = await fetchCountryData();\n        this.setState({countriesList:countriesList,filteredList:countriesList});\n    }\n    handleCountryChange = (e) =>{\n        this.setState({countryName: e.target.value},()=>{\n            let filteredList = this.state.countriesList.filter(countryObj => {\n                return countryObj.Country.toLowerCase().includes(this.state.countryName.toLowerCase());\n            });\n            if((!this.state.filteredList.length && !this.state.countryName)){\n                this.setState({filteredList: this.state.countriesList});\n            } else{\n                this.setState({filteredList: filteredList});\n            }\n        });\n    }\n\n    sortData = (filterName) => {\n        let sortedFilteredList = this.state.filteredList.sort((country1, country2) => {\n            if(filterName==\"New Confirmed\"){\n                if(country1.NewConfirmed==country2.NewConfirmed){\n                    return (country1.Country>country2.Country)?1:-1;\n                } else{\n                    return (country1.NewConfirmed>country2.NewConfirmed)?1:-1;\n                }\n            } else if(filterName==\"Confirmed\"){\n                if(country1.TotalConfirmed==country2.TotalConfirmed){\n                    return (country1.Country>country2.Country)?1:-1;\n                } else{\n                    return (country1.TotalConfirmed>country2.TotalConfirmed)?1:-1;\n                }\n            } else if(filterName==\"New Deaths\"){\n                if(country1.NewDeaths==country2.NewDeaths){\n                    return (country1.Country>country2.Country)?1:-1;\n                } else{\n                    return (country1.NewDeaths>country2.NewDeaths)?1:-1;\n                }\n            } else if(filterName==\"Deaths\"){\n                if(country1.TotalDeaths==country2.TotalDeaths){\n                    return (country1.Country>country2.Country)?1:-1;\n                } else{\n                    return (country1.TotalDeaths>country2.TotalDeaths)?1:-1;\n                }\n            } else if(filterName==\"New Recovered\"){\n                if(country1.NewRecovered==country2.NewRecovered){\n                    return (country1.Country>country2.Country)?1:-1;\n                } else{\n                    return (country1.NewRecovered>country2.NewRecovered)?1:-1;\n                }\n            } else if(filterName==\"Recovered\"){\n                if(country1.TotalRecovered==country2.TotalRecovered){\n                    return (country1.Country>country2.Country)?1:-1;\n                } else{\n                    return (country1.TotalRecovered>country2.TotalRecovered)?1:-1;\n                }\n            } else{\n                return (country1.Country>country2.Country)?1:-1;\n            }\n        });\n        this.setState({filteredList: sortedFilteredList});\n    }\n    render(){\n        return (\n            <div className={styles.countryListContainer}>\n                <h2>Get country specific data</h2>\n                <input  type=\"text\"\n                        value={this.state.countryName}\n                        onChange={this.handleCountryChange}\n                        placeholder={\"Search country\"}\n                        className={styles.formControl}\n                />\n                <br/>\n                {\n                    (this.state.filteredList.length>0)? \n                        <div className={styles.tableDiv}>\n                            <table className={styles.countryTables}>\n                                <thead>\n                                    <tr className={styles.tableHead}>\n                                        <th title=\"Click to sort\" onClick={() => this.sortData(\"Name\")}>Name <span className={styles.arrowUpDown}>↕</span></th>\n                                        <th title=\"Click to sort\" onClick={() => this.sortData(\"Confirmed\")}>Confirmed <span className={styles.arrowUpDown}>↕</span></th>\n                                        <th title=\"Click to sort\" onClick={() => this.sortData(\"New Confirmed\")}>New Confirmed <span className={styles.arrowUpDown}>↕</span></th>\n                                        <th title=\"Click to sort\" onClick={() => this.sortData(\"Recovered\")}>Recovered <span className={styles.arrowUpDown}>↕</span></th>\n                                        <th title=\"Click to sort\" onClick={() => this.sortData(\"New Recovered\")}>New Recovered <span className={styles.arrowUpDown}>↕</span></th>\n                                        <th title=\"Click to sort\" onClick={() => this.sortData(\"Deaths\")}>Deaths <span className={styles.arrowUpDown}>↕</span></th>\n                                        <th title=\"Click to sort\" onClick={() => this.sortData(\"New Deaths\")}>New Deaths <span className={styles.arrowUpDown}>↕</span></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.filteredList.map((rec) => {\n                                            return (\n                                                <tr>\n                                                    <td>{rec.Country}</td>\n                                                    <td>{rec.TotalConfirmed}</td>\n                                                    <td>{rec.NewConfirmed}</td>\n                                                    <td>{rec.TotalRecovered}</td>\n                                                    <td>{rec.NewRecovered}</td>\n                                                    <td>{rec.TotalDeaths}</td>\n                                                    <td>{rec.NewDeaths}</td>\n                                                </tr>\n                                            );\n                                        })\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    : <div>\n                        <p className={styles.alertPrimary}>No Country found</p>\n                      </div>\n                }\n                \n            </div>\n        );\n    }\n}\n\nexport default CountryLists;","/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/About/About.js",[],"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/Error/Error.js",[],"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/Home/Home.js",[],"/home/tpriyanshu/Documents/githubProjects/corona-tracker/src/components/PaginatedTable/PaginatedTable.js",[],{"ruleId":"67","severity":1,"message":"68","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":13},{"ruleId":"67","severity":1,"message":"71","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":15},{"ruleId":"67","severity":1,"message":"72","line":6,"column":17,"nodeType":"69","messageId":"70","endLine":6,"endColumn":21},{"ruleId":"67","severity":1,"message":"73","line":6,"column":38,"nodeType":"69","messageId":"70","endLine":6,"endColumn":44},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":34,"column":26,"nodeType":"80","messageId":"81","endLine":34,"endColumn":28},{"ruleId":"78","severity":1,"message":"79","line":35,"column":41,"nodeType":"80","messageId":"81","endLine":35,"endColumn":43},{"ruleId":"78","severity":1,"message":"79","line":40,"column":33,"nodeType":"80","messageId":"81","endLine":40,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":41,"column":43,"nodeType":"80","messageId":"81","endLine":41,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":46,"column":33,"nodeType":"80","messageId":"81","endLine":46,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":47,"column":38,"nodeType":"80","messageId":"81","endLine":47,"endColumn":40},{"ruleId":"78","severity":1,"message":"79","line":52,"column":33,"nodeType":"80","messageId":"81","endLine":52,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":53,"column":40,"nodeType":"80","messageId":"81","endLine":53,"endColumn":42},{"ruleId":"78","severity":1,"message":"79","line":58,"column":33,"nodeType":"80","messageId":"81","endLine":58,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":59,"column":41,"nodeType":"80","messageId":"81","endLine":59,"endColumn":43},{"ruleId":"78","severity":1,"message":"79","line":64,"column":33,"nodeType":"80","messageId":"81","endLine":64,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":65,"column":43,"nodeType":"80","messageId":"81","endLine":65,"endColumn":45},"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]